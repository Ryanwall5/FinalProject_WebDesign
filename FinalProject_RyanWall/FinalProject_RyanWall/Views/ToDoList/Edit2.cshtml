
@model FinalProject_RyanWall.Models.ToDoList


@using (Ajax.BeginForm("Edit2", "ToDoList", new AjaxOptions
{
    InsertionMode = InsertionMode.Replace,
    HttpMethod = "POST",
    OnSuccess = "updateSuccess"
}, new { @id = "updatelistform" }))
{
    @Html.ValidationSummary(true)
    <div id="update-message" class="error invisible"></div>
    <fieldset>
        <legend>ListModel</legend>
        @Html.HiddenFor(model => model.ToDoListId)
        

        <div class="editor-label">
            @Html.LabelFor(model => model.NameOfDuty)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NameOfDuty)
            @Html.ValidationMessageFor(model => model.NameOfDuty)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Date)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Date)
            @Html.ValidationMessageFor(model => model.Date)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateToFinish)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateToFinish)
            @Html.ValidationMessageFor(model => model.DateToFinish)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsChecked)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsChecked)
            @Html.ValidationMessageFor(model => model.IsChecked)
        </div>
    </fieldset>
}
    @*@{
            ViewBag.Title = "Edit2";
        }

        <div>
          <div>
        <div>
            <h2>edit2</h2>
        </div>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal ">
                    <h4>ToDoList</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ToDoListId)
                    @Html.HiddenFor(model => model.NameOfDuty)
                    @Html.HiddenFor(model => model.Date)
                    @Html.HiddenFor(model => model.DateToFinish)
                    @Html.ValidationMessageFor(model => model.NameOfDuty, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    @Html.ValidationMessageFor(model => model.DateToFinish, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.IsChecked, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsChecked)
                                @Html.ValidationMessageFor(model => model.IsChecked, "", new { @class = "text-danger" })

                            </div>
                        </div>
                    </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default"  />
                        </div>
                    </div>

            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }

        </div>
            </div>*@
